tie <- mean(vv==-100)
t2e <- mean(vv==-200)
pwr <- 1 - mean(vv==-200 | vv==-100)
ssm <- summary(vv[!(vv %in% c(-100,-200))])[c(1:3, 5:6)]
ssm <- c(tie, t2e, pwr, ssm)
names(ssm)[1:3] <- c("Type I Error","Type II Error", "Power")
ssm
}
return(list(sm = makeSummary(smt),
mm = makeSummary(mmt),
pm = makeSummary(pmt)))
}
res <- lapply(ff, getPowerTab)
ff
getwd()
# original
ff <- list.files("1000_rds_files", full.names = TRUE)
ff
ff <- ff[10:12] # Getting rid of slope = 0.005, sig = 0.005
ff
res <- lapply(ff, getPowerTab)
res_sm <- lapply(res, function(z) setDT(as.list(z[[1]]))) |> rbindlist()
res_mm <- lapply(res, function(z) setDT(as.list(z[[2]]))) |> rbindlist()
res_pm <- lapply(res, function(z) setDT(as.list(z[[3]]))) |> rbindlist()
attributes(readRDS(ff[1]))
attributes(readRDS(ff[2]))
attributes(readRDS(ff[3]))
# original
ff <- list.files("1000_rds_files", full.names = TRUE)
#ff <- ff[c(1, 5:12, 2:4)]
ff <- ff[7:9] # Getting rid of slope = 0.005, sig = 0.005
attributes(readRDS(ff[1]))
# original
ff <- list.files("1000_rds_files", full.names = TRUE)
ff <- ff[c(1, 5:12, 2:4)]
ff
attributes(readRDS(ff[1]))
attributes(readRDS(ff[2]))
attributes(readRDS(ff[3]))
res <- lapply(ff, getPowerTab)
res_sm <- lapply(res, function(z) setDT(as.list(z[[1]]))) |> rbindlist()
res_mm <- lapply(res, function(z) setDT(as.list(z[[2]]))) |> rbindlist()
res_pm <- lapply(res, function(z) setDT(as.list(z[[3]]))) |> rbindlist()
# Only doing power on these three things yay
simDataSettings <- data.table(mm = c(F, T, T),
ar = c(T, T, F),
bcor = c(T, F, F))
simDataSettings <- rbind(simDataSettings, simDataSettings)
simDataSettings$sigVal <- rep(c(0.005, 0.025), each = 3)
#simDataSettings <- rbind(simDataSettings, simDataSettings)
#simDataSettings$slope <- rep(c(0.005, 0.025), each = 6)
#names(simDataSettings) <- c("manymeans", "ar1", "bdotscorr", "sigma", "m")
names(simDataSettings) <- c("manymeans", "ar1", "bdotscorr", "sigma")
res_sm <- cbind(simDataSettings, res_sm)[order(manymeans, ar1, bdotscorr, sigma), ]
res_mm <- cbind(simDataSettings, res_mm)[order(manymeans, ar1, bdotscorr, sigma), ]
res_pm <- cbind(simDataSettings, res_pm)[order(manymeans, ar1, bdotscorr, sigma), ]
res_sm[,4:12] <- round(res_sm[,4:12], 3)
res_mm[,4:12] <- round(res_mm[,4:12], 3)
res_pm[,4:12] <- round(res_pm[,4:12], 3)
## so much dumb processing on this
res_sm[, bdotscorr := NULL]
res_mm[, bdotscorr := NULL]
res_pm[, bdotscorr := NULL]
digg <- c(1,1,1,3,2,2,2,2,2,2,2,2)
xtable(res_sm, caption = "Power for v1 bootstrap",
label = "tab:bad_boot_pwr", digits = digg) |> print(include.rownames = FALSE)
# original
ff <- list.files("1000_rds_files", full.names = TRUE)
ff <- ff[c(1, 5:12, 2:4)]
attributes(readRDS(ff[1]))
attributes(readRDS(ff[2]))
attributes(readRDS(ff[3]))
attributes(readRDS(ff[4]))
attributes(readRDS(ff[5]))
attributes(readRDS(ff[6]))
attributes(readRDS(ff[7]))
attributes(readRDS(ff[8]))
attributes(readRDS(ff[9]))
\
attributes(readRDS(ff[10]))
attributes(readRDS(ff[11]))
attributes(readRDS(ff[12]))
ff <- ff[10:12] # Getting rid of slope = 0.005, sig = 0.005
ff
attributes(readRDS(ff[1]))
attributes(readRDS(ff[2]))
attributes(readRDS(ff[12]))
attributes(readRDS(ff[3]))
ff <- list.files("1000_rds_files", full.names = TRUE)
ff <- ff[c(1, 5:12, 2:4)]
ff <- ff[10:12] # Getting rid of slope = 0.005, sig = 0.005
res <- lapply(ff, getPowerTab)
res_sm <- lapply(res, function(z) setDT(as.list(z[[1]]))) |> rbindlist()
res_mm <- lapply(res, function(z) setDT(as.list(z[[2]]))) |> rbindlist()
res_pm <- lapply(res, function(z) setDT(as.list(z[[3]]))) |> rbindlist()
# Only doing power on these three things yay
simDataSettings <- data.table(mm = c(F, T, T),
ar = c(T, T, F),
bcor = c(T, F, F))
simDataSettings <- rbind(simDataSettings, simDataSettings)
simDataSettings$sigVal <- rep(c(0.005, 0.025), each = 3)
#simDataSettings <- rbind(simDataSettings, simDataSettings)
#simDataSettings$slope <- rep(c(0.005, 0.025), each = 6)
#names(simDataSettings) <- c("manymeans", "ar1", "bdotscorr", "sigma", "m")
names(simDataSettings) <- c("manymeans", "ar1", "bdotscorr", "sigma")
# Only doing power on these three things yay
simDataSettings <- data.table(mm = c(F, T, T),
ar = c(T, T, F))
res_sm <- cbind(simDataSettings, res_sm)[order(manymeans, ar1), ]
# Only doing power on these three things yay
simDataSettings <- data.table(mm = c(F, T, T),
ar = c(T, T, F))
res__sm
res_sm
simDataSettings
#simDataSettings <- rbind(simDataSettings, simDataSettings)
#simDataSettings$sigVal <- rep(c(0.005, 0.025), each = 3)
#simDataSettings <- rbind(simDataSettings, simDataSettings)
#simDataSettings$slope <- rep(c(0.005, 0.025), each = 6)
#names(simDataSettings) <- c("manymeans", "ar1", "bdotscorr", "sigma", "m")
names(simDataSettings) <- c("manymeans", "ar1")
res_sm <- cbind(simDataSettings, res_sm)[order(manymeans, ar1), ]
res_mm <- cbind(simDataSettings, res_mm)[order(manymeans, ar1, bdotscorr, sigma), ]
ff <- list.files("1000_rds_files", full.names = TRUE)
ff <- ff[c(1, 5:12, 2:4)]
ff <- ff[10:12] # Getting rid of slope = 0.005, sig = 0.005
res <- lapply(ff, getPowerTab)
res_sm <- lapply(res, function(z) setDT(as.list(z[[1]]))) |> rbindlist()
res_mm <- lapply(res, function(z) setDT(as.list(z[[2]]))) |> rbindlist()
res_pm <- lapply(res, function(z) setDT(as.list(z[[3]]))) |> rbindlist()
# Only doing power on these three things yay
simDataSettings <- data.table(mm = c(F, T, T),
ar = c(T, T, F))
#simDataSettings <- rbind(simDataSettings, simDataSettings)
#simDataSettings$sigVal <- rep(c(0.005, 0.025), each = 3)
#simDataSettings <- rbind(simDataSettings, simDataSettings)
#simDataSettings$slope <- rep(c(0.005, 0.025), each = 6)
#names(simDataSettings) <- c("manymeans", "ar1", "bdotscorr", "sigma", "m")
names(simDataSettings) <- c("manymeans", "ar1")
res_sm <- cbind(simDataSettings, res_sm)[order(manymeans, ar1), ]
res_mm <- cbind(simDataSettings, res_mm)[order(manymeans, ar1), ]
res_pm <- cbind(simDataSettings, res_pm)[order(manymeans, ar1), ]
res_sm
res_sm[,2:10] <- round(res_sm[,2:10], 3)
res_sm
res_sm[,2:10] <- round(res_sm[,2:10], 3)
res_mm[,2:10] <- round(res_mm[,2:10], 3)
res_pm[,2:10] <- round(res_pm[,2:10], 3)
res_sm
res__mm
res_mm
res_pm
ff <- list.files("1000_rds_files", full.names = TRUE)
ff <- ff[c(1, 5:12, 2:4)]
ff <- ff[10:12] # Getting rid of slope = 0.005, sig = 0.005
res <- lapply(ff, getPowerTab)
res_sm <- lapply(res, function(z) setDT(as.list(z[[1]]))) |> rbindlist()
res_mm <- lapply(res, function(z) setDT(as.list(z[[2]]))) |> rbindlist()
res_pm <- lapply(res, function(z) setDT(as.list(z[[3]]))) |> rbindlist()
# Only doing power on these three things yay
simDataSettings <- data.table(mm = c(F, T, T),
ar = c(T, T, F))
#simDataSettings <- rbind(simDataSettings, simDataSettings)
#simDataSettings$sigVal <- rep(c(0.005, 0.025), each = 3)
#simDataSettings <- rbind(simDataSettings, simDataSettings)
#simDataSettings$slope <- rep(c(0.005, 0.025), each = 6)
#names(simDataSettings) <- c("manymeans", "ar1", "bdotscorr", "sigma", "m")
names(simDataSettings) <- c("manymeans", "ar1")
res_sm <- cbind(simDataSettings, res_sm)[order(manymeans, ar1), ]
res_mm <- cbind(simDataSettings, res_mm)[order(manymeans, ar1), ]
res_pm <- cbind(simDataSettings, res_pm)[order(manymeans, ar1), ]
res__sm
res_sm
res_sm[,3:10] <- round(res_sm[,3:10], 3)
res_mm[,3:10] <- round(res_mm[,3:10], 3)
res_pm[,3:10] <- round(res_pm[,3:10], 3)
res_sm
res_pm
res_mm
res_sm <- res_sm[, c(1:5, 7:9)]
res_sm
res_mm <- res_mm[, c(1:5, 7:9)]
res_pm <- res_pm[, c(1:5, 7:9)]
res_mm
res_pm
res_s
res_sm
res_sm <- cbind(data.table(Method = "Hom. Bootstrap"), res_sm)
res_sm
res_mm <- cbind(data.table(Method = "Het. Bootstrap"), res_mm)
res_pm <- cbind(data.table(Method = "Permutation"), res_pm)
res_mm
res_pm
tab
tab <- rbind(res_sm, res_mm, res_pm)
tab
tab$manymeans <- ifelse(tab$manymeans, "Yes", "No")
tab
tab$ar1 <- ifelse(tab$ar1, "Yes", "No")
tab
xtable(tab, caption = "Power for methods",
label = "tab:power_methods", digits = digg)
xtable(tab, caption = "Power for methods",
label = "tab:power_methods") |> print(include.rownames = FALSE)
?xtable
xtable(tab, caption = "Power for methods", aligns = c("lllcccccc"),
label = "tab:power_methods") |> print(include.rownames = FALSE)
ff <- list.files("1000_rds_files", full.names = TRUE)
ff <- ff[c(1, 5:12, 2:4)]
ff <- ff[10:12] # Getting rid of slope = 0.005, sig = 0.005
res <- lapply(ff, getPowerTab)
res_sm <- lapply(res, function(z) setDT(as.list(z[[1]]))) |> rbindlist()
res_mm <- lapply(res, function(z) setDT(as.list(z[[2]]))) |> rbindlist()
res_pm <- lapply(res, function(z) setDT(as.list(z[[3]]))) |> rbindlist()
# Only doing power on these three things yay
simDataSettings <- data.table(mm = c(F, T, T),
ar = c(T, T, F))
#simDataSettings <- rbind(simDataSettings, simDataSettings)
#simDataSettings$sigVal <- rep(c(0.005, 0.025), each = 3)
#simDataSettings <- rbind(simDataSettings, simDataSettings)
#simDataSettings$slope <- rep(c(0.005, 0.025), each = 6)
#names(simDataSettings) <- c("manymeans", "ar1", "bdotscorr", "sigma", "m")
names(simDataSettings) <- c("manymeans", "ar1")
res_sm <- cbind(simDataSettings, res_sm)[order(manymeans, ar1), ]
res_mm <- cbind(simDataSettings, res_mm)[order(manymeans, ar1), ]
res_pm <- cbind(simDataSettings, res_pm)[order(manymeans, ar1), ]
res_sm[,3:10] <- round(res_sm[,3:10], 3)
res_mm[,3:10] <- round(res_mm[,3:10], 3)
res_pm[,3:10] <- round(res_pm[,3:10], 3)
res_sm <- res_sm[, c(1:5, 7:9)]
res_mm <- res_mm[, c(1:5, 7:9)]
res_pm <- res_pm[, c(1:5, 7:9)]
res_sm <- cbind(data.table(Method = "Hom. Boot"), res_sm)
res_mm <- cbind(data.table(Method = "Het. Boot"), res_mm)
res_pm <- cbind(data.table(Method = "Perm"), res_pm)
tab <- rbind(res_sm, res_mm, res_pm)
tab$manymeans <- ifelse(tab$manymeans, "Yes", "No")
tab$ar1 <- ifelse(tab$ar1, "Yes", "No")
digg <- c(1,1,1,3,2,2,2,2,2,2,2,2)
xtable(tab, caption = "Power for methods", aligns = c("lllcccccc"),
label = "tab:power_methods") |> print(include.rownames = FALSE)
xtable(tab, caption = "Power for methods", align = c("lllcccccc"),
label = "tab:power_methods") |> print(include.rownames = FALSE)
xtable(tab, caption = "Power for methods", align = c("lllcccccc"),
label = "tab:power_methods") |> print(include.rownames = FALSE)
xtable(tab, caption = "Power for methods", align = c("llllcccccc"),
label = "tab:power_methods") |> print(include.rownames = FALSE)
tab
colMeans(tab[, c(4:9)])
tab[, colMean(c(4:9)), by = Method]
tab[, colMeans(c(4:9)), by = Method]
tab[, colMeans(`Type I Error`, Power), by = Method]
res_sm
finalSummary <- rbind(colMeans(res_sm[, 4:9]),
colMeans(res_mm[, 4:9]),
colMeans(res_pm[, 4:9])) |> as.data.table()
finalSummary
finalSummary <- cbind(data.table(Method = c("Hom. Bootstrap", "Het. Bootstrap", "Permtuation")),
finalSummary)
finalSummary
xtable(finalSummary, caption = "Summary of methods for Type II error",
label = "tab:type_2_summary", digits = 3) |> print(include.rownames = FALSE)
ff <- list.files(path = "~/dissertation/writing/methodology/scripts/argon/patched_boot", pattern = "rds", full.names = TRUE)
ff
ff <- list.files(path = "~/dissertation/writing/methodology/scripts/argon/patched_perm/patched_boot", pattern = "rds", full.names = TRUE)
ff
simDataSettings <- expand.grid(manymeans = c(TRUE, FALSE),
paired = c(TRUE, FALSE),
ar1 = c(TRUE, FALSE),
bdotscor = c(TRUE, FALSE))
simDataSettings
simDataSettings <- expand.grid(manymeans = c(TRUE, FALSE),
paired = c(TRUE, FALSE),
ar1 = c(TRUE, FALSE),
bdotscor = c(TRUE, FALSE))
simDataSettings <- simDataSettings[c(1L, 3L, 4L, 5L, 7L, 8L, 9L, 11L, 12L, 13L, 15L, 16L), ]
simDataSettings <- expand.grid(manymeans = c(TRUE, FALSE),
paired = c(TRUE, FALSE),
ar1 = c(TRUE, FALSE),
bdotscor = c(TRUE, FALSE))
simDataSettings <- simDataSettings[c(1L, 3L, 4L, 5L, 7L, 8L, 9L, 11L, 12L, 13L, 15L, 16L), ]
dim(simDa)
simDataSettings
simDataSettings <- simDataSettings[1:9, ]
tt <- lapply(ff, readRDS)
tt <- lapply(tt, function(y) {
y <- lapply(y, `[[`, 1)
y <- sapply(y, function(z) !is.null(z)) |> mean()
})
tt
readRDS(ff[[1]])
tt <- lapply(tt, function(y) {
y <- lapply(y, `[[`, 1)
y <- sapply(y, function(z) !is.null(z)) |> mean()
})
tt[[1]]
tt
tt <- lapply(tt, function(y) {
y <- lapply(y, `[[`, 1)
#y <- sapply(y, function(z) !is.null(z)) |> mean()
})
tt <- lapply(ff, readRDS)
tt <- lapply(tt, function(y) {
y <- lapply(y, `[[`, 1)
#y <- sapply(y, function(z) !is.null(z)) |> mean()
})
tt
tt <- lapply(ff, readRDS)
length(tt)
tt <- tt[[1]]
tt
tt <- lapply(tt, function(y) {
y <- lapply(y, `[[`, 1)
#y <- sapply(y, function(z) !is.null(z)) |> mean()
})
tt
fwerhist <- function(y) {
tt <- readRDS(y)
sigs <- lapply(tt,  function(y) {
y <- lapply(y, `[[`, 1)
})
psigs
smt <- sapply(sigs, function(x) timetie(x[[1]]))
mmt <- sapply(sigs, function(x) timetie(x[[2]]))
pmt <- sapply(sigs, function(x) timetie(x[[3]]))
pmtt <- apply(pmt, 2, function(x) TIME[x])
rr <- Reduce(c, pmtt)
hist(rr, breaks = seq(0, 1600, 16))
hist(rr, breaks = seq(0, 1600, 8))
hist(rr, breaks = seq(0, 1600, 4))
density(rr, bw = "SJ") |> plot()
}
sigs <- lapply(sigs, `[[`, 3)
tt <- lapply(ff, readRDS)
sigs <- lapply(tt,  function(y) {
y <- lapply(y, `[[`, 1)
})
sigs
sigs <- lapply(sigs, `[[`, 3)
sigs
tt <- lapply(ff, readRDS)
tt[[1]]
rr <- <- tt[[1]]
rr <- tt[[1]]
rr
tt <- lapply(ff, readRDS)
tt <- lapply(tt, function(y) {
y <- lapply(y, `[[`, 1)
#y <- sapply(y, function(z) !is.null(z)) |> mean()
})
tt[[1]]
tie <- lapply(tt, function(y) {
y <- lapply(y, `[[`, 1)
y <- sapply(y, function(z) !is.null(z)) |> mean()
})
tie
tie <- sapply(tt, function(y) {
y <- lapply(y, `[[`, 1)
y <- sapply(y, function(z) !is.null(z)) |> mean()
})
tie
length(tie)
dim(simDataSettings)
simDataSettings$tie <- tie
simDataSettings
simDataSettings[paired == FALSE, ]
simDataSettings <- as.data.table(simDataSettings)
simDataSettings[paired == FALSE, ]
simDataSettings[paired == FALSE, ][order(manymeans)]
simDataSettings[paired == FALSE, ][order(manymeans, ar1)]
simDataSettings[paired == FALSE, ][order(manymeans, ar1)][, paired := NULL]
simDataSettings
simDataSettings[order(manymeans,ar1)]
simDataSettings <- simDataSettings[paired == FALSE, ]
simDataSettings$paired <- NULL
simDataSettings
simDataSettings[order(manymeans)]
simDataSettings[order(manymeans)][order(ar1, decreasing = TRUE)]
simDataSettings[order(manymeans)][order(ar1, decreasing = TRUE)][order(manymeans)]
ff <- list.files(path = "~/dissertation/writing/methodology/scripts/argon/patched_perm/patched_boot", pattern = "rds", full.names = TRUE)
ff
ff <- ff[c(1, 5:12, 2:4)]
ff
simDataSettings <- expand.grid(manymeans = c(TRUE, FALSE),
paired = c(TRUE, FALSE),
ar1 = c(TRUE, FALSE),
bdotscor = c(TRUE, FALSE))
simDataSettings <- simDataSettings[c(1L, 3L, 4L, 5L, 7L, 8L, 9L, 11L, 12L, 13L, 15L, 16L), ]
tt <- lapply(ff, readRDS)
tie <- sapply(tt, function(y) {
y <- lapply(y, `[[`, 1)
y <- sapply(y, function(z) !is.null(z)) |> mean()
})
tie
library(bdots)
ff <- list.files(path = "~/dissertation/writing/methodology/scripts/argon/patched_perm/patched_boot", pattern = "rds", full.names = TRUE)
ff
## OH MY GOD WRONG ORDER
ff <- ff[c(1, 9:16, 2:8)]
ff
ff <- list.files(path = "~/dissertation/writing/methodology/scripts/argon/patched_perm/patched_boot", pattern = "rds", full.names = TRUE)
ff
## OH MY GOD WRONG ORDER
#ff <- ff[c(1, 9:16, 2:8)]
ff <- ff[c(1, 5:12, 2:4)]
simDataSettings <- expand.grid(manymeans = c(TRUE, FALSE),
paired = c(TRUE, FALSE),
ar1 = c(TRUE, FALSE),
bdotscor = c(TRUE, FALSE))
simDataSettings <- simDataSettings[c(1L, 3L, 4L, 5L, 7L, 8L, 9L, 11L, 12L, 13L, 15L, 16L), ]
tt <- lapply(ff, readRDS)
tie <- sapply(tt, function(y) {
y <- lapply(y, `[[`, 1)
y <- sapply(y, function(z) !is.null(z)) |> mean()
})
tie
sigs <- lapply(tt,  function(y) {
y <- lapply(y, `[[`, 1)
})
sigs
sigs <- lapply(sigs, `[[`, 3)
sigs
sigs <- lapply(tt,  function(y) {
y <- lapply(y, `[[`, 1)
})
sigs <- lapply(sigs, `[[`, 1)
sigs
sigs[[1]]
sigs <- lapply(sigs, `[[`, 1)
sigs[[1]]
sigs
tie <- sapply(tt, function(y) {
y <- lapply(y, `[[`, 1)
y <- sapply(y, function(z) !is.null(z)) |> mean()
})
simDataSettings$tie <- tie
simDataSettings
simDataSettings[order(ar1, manymeans), ]
simDataSettings <- expand.grid(manymeans = c(TRUE, FALSE),
paired = c(TRUE, FALSE),
ar1 = c(TRUE, FALSE),
bdotscor = c(TRUE, FALSE))
simDataSettings <- simDataSettings[c(1L, 3L, 4L, 5L, 7L, 8L, 9L, 11L, 12L, 13L, 15L, 16L), ]
simDataSettings <- as.data.table(simDataSettings)
simDataSettings$tie <- tie
simDataSettings[order(ar1, manymeans), ]
simDataSettings[order(ar1, decreasing = TRUE), ][order(manymeans)]
simDataSettings[order(paired),][order(ar1, decreasing = TRUE), ][order(manymeans)]
simDataSettings[order(ar1, decreasing = TRUE), ][order(manymeans)][order(paired),]
sds <- simDataSettings[order(ar1, decreasing = TRUE), ][order(manymeans)][order(paired),]
sds
split(sds, paired)
split(sds, "paired")
split(sds, by = "paired")
setwd("~/dissertation/writing/")
ff <- list.files(path = "", recursive = TRUE, full.names = TRUE, pattern = "tex")
ff
?list.files
ff <- list.files(path = "", recursive = TRUE, full.names = TRUE, pattern = ".tex")
ff <- list.files(path = "", recursive = TRUE, full.names = TRUE, pattern = ".tex",
include.dirs = TRUE)
ff <- list.files(path = ".", recursive = TRUE, full.names = TRUE, pattern = ".tex",
include.dirs = TRUE)
ff <- list.files(path = ".", recursive = TRUE, full.names = TRUE, pattern = ".tex")
ff
rr <- ff[1]
fileName=rr
con=file(fileName,open="r")
line=readLines(con)
lines
line
begdoc <- c()
for (i in seq_along(letters[1:5])) print(i)
}
if (grepl(pattern = "begin{document}", x = line[i])) {begdoc <- c(begdoc, i)}
?grepl
if (grepl(pattern = "begin\\{document\\}", x = line[i])) {begdoc <- c(begdoc, i)}
i
line[5]
begdoc <- c()
for (i in seq_along(line){
if (grepl(pattern = "begin\\{document\\}", x = line[i]), fixed=TRUE) {begdoc <- c(begdoc, i)}
}
i <- 2
line[i]
grepl(pattern = "begin{document}", x = line[i], fixed=TRUE)
begdoc <- c()
for (i in seq_along(line)) {
if (grepl(pattern = "begin{document}", x = line[i], fixed=TRUE)) {
begdoc <- c(begdoc, i)
}
begdoc
enddoc <- c()
for (i in seq_along(line)) {
if (grepl(pattern = "end{document}", x = line[i], fixed=TRUE)) {
begdoc <- c(enddoc, i)
}
line[949]
simDataSettings <- expand.grid(manymeans = c(TRUE, FALSE),
paired = c(TRUE, FALSE),
ar1 = c(TRUE, FALSE),
bdotscor = c(TRUE, FALSE))
simDataSettings
simDataSettings <- simDataSettings[c(1, 3:5, 7:9, 11:13, 15, 16)]
simDataSettings <- simDataSettings[c(1, 3:5, 7:9, 11:13, 15, 16), ]
simDataSettings
sim(simDataSettings)
dim(simDataSettings)
res <- vector("list", 5)
res
attr(res, "stuff") <- "dog"
res
